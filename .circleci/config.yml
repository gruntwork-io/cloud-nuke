defaults: &defaults
  docker:
    - image: 087285199408.dkr.ecr.us-east-1.amazonaws.com/circle-ci-test-image-base:go1.16-go111module
  environment:
    environment:
    GRUNTWORK_INSTALLER_VERSION: v0.0.35
    TERRATEST_LOG_PARSER_VERSION: v0.29.0
    MODULE_CI_VERSION: v0.33.1
    TERRAFORM_VERSION: 0.14.9
    TERRAGRUNT_VERSION: NONE
    PACKER_VERSION: NONE
    GOLANG_VERSION: 1.16
    GO111MODULE: auto
install_gruntwork_utils: &install_gruntwork_utils
  name: install gruntwork utils
  command: |
    curl -Ls https://raw.githubusercontent.com/gruntwork-io/gruntwork-installer/master/bootstrap-gruntwork-installer.sh | bash /dev/stdin --version "${GRUNTWORK_INSTALLER_VERSION}"
    gruntwork-install --module-name "gruntwork-module-circleci-helpers" --repo "https://github.com/gruntwork-io/terraform-aws-ci" --tag "${MODULE_CI_VERSION}"
    gruntwork-install --binary-name "terratest_log_parser" --repo "https://github.com/gruntwork-io/terratest" --tag "${TERRATEST_LOG_PARSER_VERSION}"
    configure-environment-for-gruntwork-module \
      --terraform-version ${TERRAFORM_VERSION} \
      --terragrunt-version ${TERRAGRUNT_VERSION} \
      --packer-version ${PACKER_VERSION} \
      --go-version ${GOLANG_VERSION} \
version: 2
jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - run:
          <<: *install_gruntwork_utils
      - run:
          command: |
            mkdir -p /tmp/logs
            run-go-tests --timeout 45m | tee /tmp/logs/all.log
          no_output_timeout: 45m
      - run:
          name: parse test output
          command: terratest_log_parser --testlog /tmp/logs/all.log --outputdir /tmp/logs
          when: always
      - store_artifacts:
          path: /tmp/logs
      - store_test_results:
          path: /tmp/logs

  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          <<: *install_gruntwork_utils
      - run: build-go-binaries --app-name cloud-nuke --dest-path bin --ld-flags "-X main.VERSION=$CIRCLE_TAG"
      - persist_to_workspace:
          root: .
          paths: bin
  nuke_phx_devops:
    <<: *defaults
    steps:
      - checkout
      - run:
          command: |
            # We explicitly list the resource types we want to nuke, as we are not ready to nuke some resource types in
            # the AWS account we use at Gruntwork for testing (Phx DevOps) (e.g., S3)
            go run main.go aws \
              --older-than 1h \
              --force \
              --config ./.circleci/nuke_config.yml \
              --exclude-resource-type iam
          no_output_timeout: 1h
  nuke_sandbox:
    <<: *defaults
    steps:
      - checkout
      - run:
          command: |
            export AWS_ACCESS_KEY_ID=$SANDBOX_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$SANDBOX_AWS_SECRET_ACCESS_KEY
            # We explicitly list the resource types we want to nuke, as we are not ready to nuke some resource types in
            # the AWS account we use at Gruntwork for testing (Sandbox) (e.g., S3)
            go run main.go aws \
              --older-than 24h \
              --force \
              --config ./.circleci/nuke_config.yml \
              --exclude-resource-type iam
          no_output_timeout: 1h
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: cd bin && sha256sum * > SHA256SUMS
      - run: upload-github-release-assets bin/*
workflows:
  version: 2
  build-and-test:
    jobs:
      - test:
          filters:
            tags:
              only: /^v.*/
          context:
            - Gruntwork Admin
      - build:
          filters:
            tags:
              only: /^v.*/
          context:
            - Gruntwork Admin
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          context:
            - Gruntwork Admin
  frequently:
    triggers:
      - schedule:
          cron: "0 0,3,6,9,12,15,18,21 * * *"
          filters:
            branches:
              only: master
    jobs:
      - nuke_phx_devops
  nightly:
    triggers:
      - schedule:
          cron: "0 6 * * *"
          filters:
            branches:
              only: master
    jobs:
      - nuke_sandbox
